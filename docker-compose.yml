version: "3.8"

services:
  # Nginx + ModSecurity
  nginx:
    build: .
    container_name: waf-nginx
    ports:
      - "8080:80"
    volumes:
      - modsec-logs:/var/log/modsecurity   # shared volume for ModSecurity logs

  # Kafka (KRaft mode - no Zookeeper)
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: waf-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      CLUSTER_ID: q1w2e3r4t5y6u7i8o9p0aa
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-broker-api-versions --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 30

  topics-init:
    image: confluentinc/cp-kafka:7.6.1
    depends_on:
      kafka:
        condition: service_healthy
    restart: "no"
    environment:
      BROKER: "kafka:9092"
    volumes:
      - ./kafka/ensure-topics.sh:/scripts/ensure-topics.sh:ro
    entrypoint: ["/bin/bash","-lc","/scripts/ensure-topics.sh"]

  # ksqlDB (raw -> enriched/metrics/alerts 토픽 생성)
  ksqldb:
    image: confluentinc/cp-ksqldb-server:7.6.6
    container_name: waf-ksqldb
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: "kafka:9092"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_KSQL_SERVICE_ID: "waf_ksqldb_01"
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: "1"
      KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: "1"
      KSQL_KSQL_SINK_REPLICAS: "1"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: "1"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: "earliest"
      KSQL_HEAP_OPTS: "-Xms512m -Xmx512m"
      KSQL_KSQL_STREAMS_NUM_STANDBY_REPLICAS: "0"
    depends_on:
      kafka:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8088/info >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 60
      start_period: 10s

  ksqldb-cli-init:
    image: confluentinc/cp-ksqldb-cli:7.6.6
    depends_on:
      ksqldb:
        condition: service_healthy
    volumes:
      - ./ksqldb/ddl.sql:/scripts/ddl.sql:ro
      - ./ksqldb/rulemap-init.sql:/scripts/rulemap-init.sql:ro
    entrypoint: >
      bash -lc "
        echo 'ksqldb is healthy. applying DDL...';
        ksql http://waf-ksqldb:8088 --file /scripts/ddl.sql &&
        ksql http://waf-ksqldb:8088 --file /scripts/rulemap-init.sql
      "

  # Filebeat: tail ModSecurity logs -> Kafka (raw 토픽)
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.2
    container_name: waf-filebeat
    depends_on:
      - kafka
      - nginx
    volumes:
      - modsec-logs:/var/log/modsecurity:ro
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
    command: ["filebeat", "-e", "-strict.perms=false"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.2
    container_name: waf-es
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - ingest.geoip.downloader.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.2
    container_name: waf-kibana
    depends_on: [elasticsearch]
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
      
  logstash:
    image: docker.elastic.co/logstash/logstash:8.15.2
    container_name: waf-logstash
    depends_on:
      - elasticsearch
      - kafka
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    environment:
      - LS_JAVA_OPTS=-Xms512m -Xmx512m

volumes:
  modsec-logs:
